{"version":3,"sources":["components/header.js","components/state.js","components/section.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","state","sections","pages","zoom","top","createRef","offsetContext","createContext","Section","children","offset","factor","props","useThree","size","viewport","useContext","viewportWidth","width","viewportHeight","height","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","sectionHeight","aspect","useSection","parentOffset","ref","useRef","undefined","useFrame","curY","current","position","y","curTop","lerp","Provider","value","Model","url","gltf","useGLTFLoader","object","scene","dispose","Lights","intensity","castShadow","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","HTMLContent","domContent","bgColor","modelPath","rotation","useInView","threshold","refItem","inView","useEffect","document","body","style","background","fullscreen","portal","Loader","useProgress","active","progress","useTransition","from","opacity","leave","update","transition","div","App","useState","events","scrollArea","onScroll","e","target","scrollTop","concurrent","colorManagement","camera","fov","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8665ab83.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <div className='header-inner'>\r\n        <div className='logo'>Plants.</div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <a href='/'>discover</a>\r\n            </li>\r\n            <li>\r\n              <a href='https://taylor-abbott.dev/'>contact</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import { createRef } from \"react\";\r\n\r\nconst state = {\r\n    sections: 6,\r\n    pages: 6,\r\n    zoom: 1,\r\n    top: createRef(),\r\n};\r\n\r\nexport default state;","import React, { createContext, useRef, useContext } from \"react\";\r\nimport { useFrame, useThree } from \"react-three-fiber\";\r\nimport lerp from \"lerp\";\r\nimport state from \"./state\";\r\n\r\nconst offsetContext = createContext(0);\r\n\r\nfunction Section({ children, offset, factor, ...props }) {\r\n  const { offset: parentOffset, sectionHeight, aspect } = useSection();\r\n  const ref = useRef();\r\n  offset = offset !== undefined ? offset : parentOffset;\r\n  useFrame(() => {\r\n    const curY = ref.current.position.y;\r\n    const curTop = state.top.current / aspect;\r\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1);\r\n  });\r\n  return (\r\n    <offsetContext.Provider value={offset}>\r\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\r\n        <group ref={ref}>{children}</group>\r\n      </group>\r\n    </offsetContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useSection() {\r\n  const { sections, pages, zoom } = state;\r\n  const { size, viewport } = useThree();\r\n  const offset = useContext(offsetContext);\r\n  const viewportWidth = viewport.width;\r\n  const viewportHeight = viewport.height;\r\n  const canvasWidth = viewportWidth / zoom;\r\n  const canvasHeight = viewportHeight / zoom;\r\n  const mobile = size.width < 700;\r\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1);\r\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6);\r\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1));\r\n  const aspect = size.height / viewportHeight;\r\n  return {\r\n    aspect,\r\n    viewport,\r\n    offset,\r\n    viewportWidth,\r\n    viewportHeight,\r\n    canvasWidth,\r\n    canvasHeight,\r\n    mobile,\r\n    margin,\r\n    contentMaxWidth,\r\n    sectionHeight,\r\n  };\r\n}\r\n\r\nexport { Section, useSection };\r\n","import React, { useRef, useEffect, useState, Suspense } from \"react\";\r\nimport \"./App.scss\";\r\n//Components\r\nimport Header from \"./components/header\";\r\nimport { Section } from \"./components/section\";\r\n\r\n// Page State\r\nimport state from \"./components/state\";\r\n\r\n// R3F\r\nimport { Canvas, useFrame } from \"react-three-fiber\";\r\nimport { Html, useProgress, useGLTFLoader } from \"drei\";\r\n\r\n// React Spring\r\nimport { a, useTransition } from \"@react-spring/web\";\r\n//Intersection Observer\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nfunction Model({ url }) {\r\n  const gltf = useGLTFLoader(url, true);\r\n  return <primitive object={gltf.scene} dispose={null} />;\r\n}\r\n\r\nconst Lights = () => {\r\n  return (\r\n    <>\r\n      {/* Ambient Light illuminates lights for all objects */}\r\n      <ambientLight intensity={0.3} />\r\n      {/* Diretion light */}\r\n      <directionalLight position={[0, 5, 5]} intensity={1} />\r\n      <directionalLight\r\n        castShadow\r\n        position={[0, 10, 0]}\r\n        intensity={1.5}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        shadow-camera-far={50}\r\n        shadow-camera-left={-10}\r\n        shadow-camera-right={10}\r\n        shadow-camera-top={10}\r\n        shadow-camera-bottom={-10}\r\n      />\r\n      {/* Spotlight Large overhead light */}\r\n      <spotLight intensity={1} position={[1000, 0, 0]} castShadow />\r\n    </>\r\n  );\r\n};\r\n\r\nconst HTMLContent = ({\r\n  domContent,\r\n  children,\r\n  bgColor,\r\n  modelPath,\r\n  position,\r\n}) => {\r\n  const ref = useRef();\r\n  useFrame(() => (ref.current.rotation.y += 0.01));\r\n  const [refItem, inView] = useInView({\r\n    threshold: 0,\r\n  });\r\n  useEffect(() => {\r\n    inView && (document.body.style.background = bgColor);\r\n  }, [inView]);\r\n  return (\r\n    <Section factor={1.5} offset={1}>\r\n      <group position={[0, position, 0]}>\r\n        <mesh ref={ref} position={[0, -35, 0]}>\r\n          <Model url={modelPath} />\r\n        </mesh>\r\n        <Html fullscreen portal={domContent}>\r\n          <div ref={refItem} className='container'>\r\n            <h1 className='title'>{children}</h1>\r\n          </div>\r\n        </Html>\r\n      </group>\r\n    </Section>\r\n  );\r\n};\r\n\r\nfunction Loader() {\r\n  const { active, progress } = useProgress();\r\n  const transition = useTransition(active, {\r\n    from: { opacity: 1, progress: 0 },\r\n    leave: { opacity: 0 },\r\n    update: { progress },\r\n  });\r\n  return transition(\r\n    ({ progress, opacity }, active) =>\r\n      active && (\r\n        <a.div className='loading' style={{ opacity }}>\r\n          <div className='loading-bar-container'>\r\n            <a.div className='loading-bar' style={{ width: progress }}></a.div>\r\n          </div>\r\n        </a.div>\r\n      )\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [events, setEvents] = useState();\r\n  const domContent = useRef();\r\n  const scrollArea = useRef();\r\n  const onScroll = (e) => (state.top.current = e.target.scrollTop);\r\n  useEffect(() => void onScroll({ target: scrollArea.current }), []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {/* R3F Canvas */}\r\n      <Canvas\r\n        concurrent\r\n        colorManagement\r\n        camera={{ position: [0, 0, 120], fov: 75 }}>\r\n        {/* Lights Component */}\r\n        <Lights />\r\n        <Suspense fallback={null}>\r\n          <HTMLContent\r\n            domContent={domContent}\r\n            bgColor='#fcd5ce'\r\n            modelPath='/succulent3.gltf'\r\n            position={225}>\r\n            <span>The ultimate guide to keeping </span>\r\n            <span>your houseplants alive. </span>\r\n          </HTMLContent>\r\n\r\n          <HTMLContent\r\n            domContent={domContent}\r\n            bgColor='#f8edeb'\r\n            modelPath='/drac.gltf'\r\n            position={0}>\r\n            <span>Aloe Vera</span>\r\n            <span className = 'top'>Place in bright, indirect sunlight or </span>\r\n            <span className = 'small'>artificial light. Water your aloe plant </span>\r\n            <span className = 'small'>once every 2-3 weeks in spring and </span>\r\n            <span className = 'small'>summer, and even less often in winter. </span>\r\n            <span className = 'small'>Aloe vera do best in temperatures  </span>\r\n            <span className = 'small'>between 55 and 80°F. </span>\r\n          </HTMLContent>\r\n\r\n          \r\n          <HTMLContent\r\n            domContent={domContent}\r\n            bgColor='#fcd5ce'\r\n            modelPath='/figTree2.gltf'\r\n            position={-250}>\r\n            <span>Fiddle Leaf Fig</span>\r\n            <span className = 'top'>The Fiddle Leaf Fig appreciates a warm, humid </span>\r\n            <span className = 'small'>environment, a fair amount of water  </span>\r\n            <span className = 'small'>and plenty of light.A few hours of direct sun is </span>\r\n            <span className = 'small'>also beneficial. They will not thrive in  </span>\r\n            <span className = 'small'>low-light locations. Let soil dry between  </span>\r\n            <span className = 'small'>waterings. </span>\r\n          </HTMLContent>\r\n          <HTMLContent\r\n            domContent={domContent}\r\n            bgColor='#f8edeb'\r\n            modelPath='/airplant3.gltf'\r\n            position={-500}>\r\n            <span>Air Plant</span>\r\n            <span className = 'top'>In order to thrive, air plants need  </span>\r\n            <span className = 'small'>bright, indirect light. In general, </span>\r\n            <span className = 'small'>the higher the humidity in your   </span>\r\n            <span className = 'small'>space, the more light is tolerated </span>\r\n            <span className = 'small'>by your air plant. Every 1-2 </span>\r\n            <span className = 'small'>weeks, soak in room temperature </span>\r\n            <span className = 'small'>water. In spring and summer, </span>\r\n            <span className = 'small'>you may need to water more often. </span>\r\n          </HTMLContent>\r\n\r\n          <HTMLContent\r\n            domContent={domContent}\r\n            bgColor='#fcd5ce' //white\r\n            modelPath='/pothos2.gltf'\r\n            position={-750}>\r\n            <span>Pothos</span>\r\n            <span className = 'top'>Pothos enjoy a wide range of environments. </span>\r\n            <span className = 'small'>They do well in bright indirect sunlight </span>\r\n            <span className = 'small'>as well as low light and can be grown in </span>\r\n            <span className = 'small'>dry soil or vases of water. Water </span>\r\n            <span className = 'small'>once a week and keep out of bright direct  </span>\r\n            <span className = 'small'>light. Room temperature environment is ideal.</span>\r\n          </HTMLContent>\r\n          <HTMLContent\r\n            domContent={domContent}\r\n            bgColor='#f8edeb' //pink\r\n            modelPath='/snakeplant.gltf'\r\n            position={-1000}>\r\n            <span>Snake plant</span>\r\n            <span className = 'top'>The snake plant is known for being very tolerant </span>\r\n            <span className = 'small'>and can be neglected for weeks at a time. </span>\r\n            <span className = 'small'>Water every 1-2 weeks in spring and </span>\r\n            <span className = 'small'>summer, and even less often in winter. </span>\r\n            <span className = 'small'>Snake plants do best in temperatures  </span>\r\n            <span className = 'small'>between 55 and 80°F. </span>\r\n          </HTMLContent>\r\n        </Suspense>\r\n      </Canvas>\r\n      <Loader />\r\n      <div\r\n        className='scrollArea'\r\n        ref={scrollArea}\r\n        onScroll={onScroll}\r\n        {...events}>\r\n        <div style={{ position: \"sticky\", top: 0 }} ref={domContent} />\r\n        <div style={{ height: `${state.pages * 100}vh` }} />\r\n      </div>\r\n    </>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}